package ru.sergey.PrimeNum;

/*
Определите функцию, которая принимает целочисленный аргумент
и возвращает логическое значение true или false В зависимости от того, является ли целое число.


По википедии, основное число (или простое) является естественным числом,
превышающим, чем 1 у этого нет положительных делителей, кроме как 1 и сам.


    Требования

    Вы можете предположить, что вам будет предоставлен целочисленный вход.
    Вы не можете предположить, что целое число будет только положительным. Вам также могут быть даны отрицательные числа (или 0 ).
    ПРИМЕЧАНИЕ О производительности : не требуется необычная оптимизация, но все же самые тривиальные решения могут пройти.
    Числа поднимаются до 2^31 (или аналогично, в зависимости от языка). Зацикливание до самого n, или n/2, будет слишком медленно.

Пример

is_prime(1)  - false
is_prime(2)  - true
is_prime(-1) - false
 */

public class Prime {
    public static boolean isPrime(int num) {
        //TODO
        if (num<=1)
            return false;
        else if (num <=3)
            return true;
        else if (num%2==0 || num %3 ==0)
            return false;
        int n = 5;
        while (n*n <=num){
            if (num % n ==0 || num % (n+2) == 0)
                return false;
            n=n+6;
        }
        return true;
    }
}